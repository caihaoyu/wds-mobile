<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 ! Source code generated by Celerio, a Jaxio product
 ! Want to use Celerio within your company? email us at info@jaxio.com
 ! Follow us on twitter: @springfuse
 ! Template pack-backend:src/main/resources/ehcache.p.vm.xml
-->
<ehcache>
	<!-- see cache/ehcache-distributed.xml for hibernate distributed caching -->

	<!-- Sets the path to the directory where cache .data files are created.

		If the path is a Java System Property it is replaced by
		its value in the running VM.

		The following properties are translated:
		user.home - User's home directory
		user.dir - User's current working directory
		java.io.tmpdir - Default temp file path -->
	<diskStore path="java.io.tmpdir" />

	<!--Default Cache configuration. These will applied to caches programmatically created through
		the CacheManager.

		The following attributes are required for defaultCache:

		maxInMemory	   - Sets the maximum number of objects that will be created in memory
		eternal		   - Sets whether elements are eternal. If eternal,  timeouts are ignored and the element
		is never expired.
		timeToIdleSeconds - Sets the time to idle for an element before it expires.
		i.e. The maximum amount of time between accesses before an element expires
		Is only used if the element is not eternal.
		Optional attribute. A value of 0 means that an Element can idle for infinity
		timeToLiveSeconds - Sets the time to live for an element before it expires.
		i.e. The maximum time between creation time and when an element expires.
		Is only used if the element is not eternal.
		Optional attribute. A value of 0 means that and Element can live for infinity
		overflowToDisk	- Sets whether elements can overflow to disk when the in-memory cache
		has reached the maxInMemory limit.

	-->
	<defaultCache maxElementsInMemory="2000" eternal="false"
		timeToIdleSeconds="6000" timeToLiveSeconds="6000"
		overflowToDisk="false" memoryStoreEvictionPolicy="LFU">
	</defaultCache>

	<cache name="org.hibernate.cache.StandardQueryCache"
		maxElementsInMemory="10000" eternal="false" timeToIdleSeconds="86400"
		timeToLiveSeconds="86400" overflowToDisk="false"
		memoryStoreEvictionPolicy="LFU">
	</cache>

	<!-- mandatory if you want to distribute the query cache -->
	<cache name="org.hibernate.cache.UpdateTimestampsCache"
		maxElementsInMemory="400000" eternal="true" overflowToDisk="false"
		memoryStoreEvictionPolicy="LFU">
	</cache>

	<!--

		You can override cache configuration given a cache name the following way:

		<cache
		name="org.hibernate.cache.StandardQueryCache"
		maxElementsInMemory="100"
		overflowToDisk="false"
		diskExpiryThreadIntervalSeconds="120"/>

		The following cache may be used

		# hibernate related
		org.hibernate.cache.StandardQueryCache
		org.hibernate.cache.UpdateTimestampsCache

		# database related
		au.com.satech.domain.Answer

		au.com.satech.domain.Columnchoice

		au.com.satech.domain.Condition

		au.com.satech.domain.Page

		au.com.satech.domain.PageBranch

		au.com.satech.domain.PagebranchQuestion

		au.com.satech.domain.Question
		au.com.satech.domain.Question.answers
		au.com.satech.domain.Question.columnchoices
		au.com.satech.domain.Question.rules
		au.com.satech.domain.Question.subquestions

		au.com.satech.domain.Questionrule
		au.com.satech.domain.Questionrule.results

		au.com.satech.domain.Result

		au.com.satech.domain.Subquestion

		au.com.satech.domain.Survey
		au.com.satech.domain.Survey.pages

		au.com.satech.domain.Users

	-->
</ehcache>
